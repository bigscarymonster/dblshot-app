/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CoffeeBrand } from "../../coffeeBrand/base/CoffeeBrand";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumBlendOrigin } from "./EnumBlendOrigin";
import { EnumBlendRoast } from "./EnumBlendRoast";
@ObjectType()
class Blend {
  @ApiProperty({
    required: false,
    type: () => [CoffeeBrand],
  })
  @ValidateNested()
  @Type(() => CoffeeBrand)
  @IsOptional()
  coffeeBrands?: Array<CoffeeBrand>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    enum: EnumBlendOrigin,
  })
  @IsEnum(EnumBlendOrigin)
  @Field(() => EnumBlendOrigin, {
    nullable: true,
  })
  origin?: "Africa" | "Brazil" | "India";

  @ApiProperty({
    required: false,
    enum: EnumBlendRoast,
  })
  @IsEnum(EnumBlendRoast)
  @IsOptional()
  @Field(() => EnumBlendRoast, {
    nullable: true,
  })
  roast?: "Light" | "Medium" | "Dark" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Blend };
